var articleEntity = require('./../models/ArticleEntity');var articleDao = require('./../models/ArticleDao');var userEntity = require('./../models/UserEntity');var userDao = require('./../models/UserDao');var gridFS = require('./../models/GridFS');var qs = require('querystring');var path = require('path');var fs = require('fs');var sys = require("sys");var article = exports;article.list = function (request, response){	var cp, ps;	var parent = decodeURI(request.get[0]);	var child = decodeURI(request.get[1]);		if(parent === 'undefined') parent = "硬件开发";	if(child === 'undefined') child = "硬件基础";		console.log(parent+">>"+child);	cp = request.post["page"]?request.post["page"]:1;	ps = 4;		var cb = function (data, page){		response.view("list.html", data, page);	};		articleDao.page(cp, ps, cb, parent, child);};article.post = function (request, response){	response.view("post.html", {"parent":decodeURI(request.get[0]),"child":decodeURI(request.get[1])}, {});};article.add = function (request, response){	var a = Object.create(articleEntity.ArticleEntity);	//var artilce = {};	var date = new Date();	a["id"] = date.getTime() +''+ Math.floor(Math.random()*100000);	a["title"] = request.post["title"];	a["content"] = request.post["content"];	var cookies = qs.parse(request.headers.cookie,';');	a["author"] = cookies['sid'];	var now = date.toISOString();	a["time"] = now;	var parent = decodeURI(request.get[0]);	var child = decodeURI(request.get[1]);	if(parent === 'undefined') parent = "硬件开发";	if(child === 'undefined') child = "硬件基础";	a["parent"] = parent;	a["child"] = child;	a["views"] = 0;		if(request.files["apdfile"].size != 0){		console.log("bb="+path.extname(request.files["apdfile"].name));		fs.rename(request.files["apdfile"].path, request.files["apdfile"].path+path.extname(request.files["apdfile"].name), function (err) {			if (err) throw err;			console.log('renamed complete');			//获得文件名			console.log("hi");				var filename = path.basename(request.files["apdfile"].path) + 				path.extname(request.files["apdfile"].name);			console.log(filename);							//存入数据库中			gridFS.write(filename, ".\\"+request.files["apdfile"].path+path.extname(request.files["apdfile"].name));						a["files"].push({"filename":path.basename(filename,path.extname(filename)),"extname":path.extname(filename).substring(1), "size":request.files["apdfile"].size});		});	}		console.log(JSON.stringify(a));	var cb1 = function (){		response.redirect("/eslab/article/list/"+parent+"/"+child);	};	articleDao.add(a, cb1);};article.display = function (request, response){	var cb1 = function (data){		response.view("display.html", data, {});	};	articleDao.disp(request.get[0], cb1);};article.reply = function (request, response){	var a = {};	var date = new Date();	a["id"] = date.getTime() +''+ Math.floor(Math.random()*100000);	a["text"] = request.post["text"];	var cookies = qs.parse(request.headers.cookie,';');	a["user"] = cookies['sid'];	var now = date.toISOString();	a["time"] = now;	var aid = request.get[0];		console.log(JSON.stringify(a));	var cb1 = function (uid){		response.redirect("/eslab/article/display/"+uid);	};	articleDao.reply(aid, a, cb1);};article.download = function (request, response){	if(request.get.length >= 2){ 				var cb = function (data){			response.file(request.get[1], data);		};				gridFS.read(request.get[0]+"."+request.get[1], cb);	}};